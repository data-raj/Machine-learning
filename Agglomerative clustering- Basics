from sklearn.datasets import make_blobs
from sklearn.metrics import confusion_matrix, accuracy_score
from sklearn.cluster import KMeans, AgglomerativeClustering, DBSCAN
from sklearn.metrics import confusion_matrix

##Create Input data
X, y = make_blobs(n_samples=1000, 
                    centers=5, 
                    center_box = (-15.0,15.0),
                    n_features = 3,
                    cluster_std = 2.0,
                    random_state = 2333)

## View data points in 3D space
from mpl_toolkits.mplot3d import Axes3D
ax = plt.axes(projection = "3d")
ax.scatter(X[:, 0], X[:, 1], X[:, 2], c=y)
ax.view_init(10, 0)

# Model building
ac = AgglomerativeClustering(n_clusters=5, affinity='euclidean', linkage='ward')
predictions = ac.fit_predict(X)
from sklearn.metrics import adjusted_rand_score

#check accuracy
adjusted_rand_score(y, predictions)                   ## we are using adjusted_rand_score, becuse of mislabeling problem

#lets draw dendogram
from scipy.cluster.hierarchy import dendrogram, linkage

Z = linkage(X)

dendrogram(
    Z,
    truncate_mode="lastp",  # show only the last p merged clusters
    p=20,  # show only the last p merged clusters
    show_leaf_counts=True,  # numbers in brackets are counts, others idx
    leaf_rotation=60.,
    leaf_font_size=8.,
    show_contracted=True,  # to get a distribution impression in truncated branches
)
